//dsu code

class DSU
{
public:
    vector<int> rors, pars;

    DSU(int n)
    {
        rors.resize(n + 1, 1);
        pars.resize(n + 1);
        for (int i = 0; i <= n; i++)
        {
            pars[i] = i;
        }
    }

    int upar(int node)
    {
        if (pars[node] == node)
        {
            return node;
        }
        else
        {
            return pars[node] = upar(pars[node]);
        }
    }

    void ubr(int a, int b)
    {
        int pa = upar(a);
        int pb = upar(b);
        if (pa == pb)
        {
            return;
        }
        if (rors[pa] > rors[pb])
        {
            pars[pb] = pa;
        }
        else if (rors[pa] < rors[pb])
        {
            pars[pa] = pb;
        }
        else
        {
            pars[pa] = pb;
            rors[pb]++;
        }
    }

    void ubs(int a, int b)
    {
        int pa = upar(a);
        int pb = upar(b);
        if (pa == pb)
        {
            return;
        }
        if (rors[pa] > rors[pb])
        {
            pars[pb] = pa;
            rors[pa] += rors[pb];
        }
        else
        {
            pars[pa] = pb;
            rors[pb] += rors[pa];
        }
    }
};
